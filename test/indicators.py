class Indicator():
    def __init__(self) -> None:
                
        self.CandlePricePoint='close'
        self.CandleOpen=''
        self.CandleHigh=''
        self.CandleLow=''
        self.CandleClose=''
        self.timeperiod=14
        self.matype=0
        self.periods=0
        self.minperiod=0
        self.maxperiod=10
        self.acceleration=2
        self.maximum=0
        self.nbdevup=0
        self.nbdevdn=0
        self.startvalue=0
        self.offsetonreverse=0
        self.vfactor=0
        self.fastperiod=0
        self.slowperiod=0
        self.volume=100
        self.signalperiod=14
        self.fastk_period=0
        self.slowk_period=0
        self.slowk_matype=0
        self.slowd_period=0
        self.slowd_matype=0
        self.fastd_matype=0
        self.timeperiod1=0
        self.timeperiod2=0
        self.timeperiod3=0
        self.fastd_period=0
        self.penetration=0
        self.nbdev=0
        self.accelerationmaxshort=0
        self.accelerationinitlong=0
        self.accelerationlong=0
        self.accelerationmaxlong=0
        self.accelerationshort=0
        self.accelerationinitshort=0
        self.slowmatype=0
        self.signalperiod=0
        self.signalmatype=0
        self.fastlimit=0
        self.slowlimit=0
        self.suffix=''

    def rebuild_params(self):

        self.indicator_replacement = {
        'BBANDS' : f'df["UPPERBAND{self.suffix}"], df["MIDDLEBAND{self.suffix}"], df["LOWERBAND{self.suffix}"] = talib.BBANDS(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod}, nbdevup={self.nbdevup}, nbdevdn={self.nbdevdn}, matype={self.matype})',
        'DEMA' : f'df["DEMA{self.suffix}"] =  talib.DEMA(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'EMA' : f'df["EMA{self.suffix}"] =  talib.EMA(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'HT_TRENDLINE' : f'df["HT_TRENDLINE{self.suffix}"] =  talib.HT_TRENDLINE(df["{self.CandlePricePoint}"])',
        'KAMA' : f'df["KAMA{self.suffix}"] =  talib.KAMA(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'MA' : f'df["MA{self.suffix}"] =  talib.MA(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod}, matype={self.matype})',
        'MAMA' :'df["MAMA{self.suffix}"], "df["FAMA"]{self.suffix}" = talib.MAMA(df["{self.CandlePricePoint}"], fastlimit={self.fastlimit}, slowlimit={self.slowlimit})',
        'MAVP' : f'df["MAVP{self.suffix}"] =  talib.MAVP(df["{self.CandlePricePoint}"], {self.periods}, minperiod={self.minperiod}, maxperiod={self.maxperiod}, matype={self.matype})',
        'MIDPOINT' : f'df["MIDPOINT{self.suffix}"] =  talib.MIDPOINT(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'MIDPRICE' : f'df["MIDPRICE{self.suffix}"] =  talib.MIDPRICE(df["{self.CandleHigh}"], df["{self.CandleLow}"], timeperiod={self.timeperiod})',
        'SAR' : f'df["SAR{self.suffix}"] =  talib.SAR(df["{self.CandleHigh}"], df["{self.CandleLow}"], acceleration={self.acceleration}, maximum={self.maximum})',
        'SAREXT' : f'df["SAREXT{self.suffix}"] =  talib.SAREXT(df["{self.CandleHigh}"], df["{self.CandleLow}"], startvalue={self.startvalue}, offsetonreverse={self.offsetonreverse}, accelerationinitlong={self.accelerationinitlong}, accelerationlong={self.accelerationlong}, accelerationmaxlong={self.accelerationmaxlong}, accelerationinitshort={self.accelerationinitshort}, accelerationshort={self.accelerationshort}, accelerationmaxshort={self.accelerationmaxshort})',
        'SMA' : f'df["SMA{self.suffix}"] =  talib.SMA(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'T3' : f'df["T3{self.suffix}"] =  talib.T3(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod}, vfactor={self.vfactor})',
        'TEMA' : f'df["TEMA{self.suffix}"] =  talib.TEMA(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'TRIMA' : f'df["TRIMA{self.suffix}"] =  talib.TRIMA(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'WMA' : f'df["WMA{self.suffix}"] =  talib.WMA(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'ADX' : f'df["ADX{self.suffix}"] =  talib.ADX(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod={self.timeperiod})',
        'ADXR' : f'df["ADXR{self.suffix}"] =  talib.ADXR(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod={self.timeperiod})',
        'APO' : f'df["APO{self.suffix}"] =  talib.APO(df["{self.CandlePricePoint}"], fastperiod={self.fastperiod}, slowperiod={self.slowperiod}, matype={self.matype})',
        'AROON' : f'df["AROONDOWN{self.suffix}"], df["AROONUP{self.suffix}"] = talib.AROON(df["{self.CandleHigh}"], df["{self.CandleLow}"], timeperiod={self.timeperiod})',
        'AROONOSC' : f'df["AROONOSC{self.suffix}"] =  talib.AROONOSC(df["{self.CandleHigh}"], df["{self.CandleLow}"], timeperiod={self.timeperiod})',
        'BOP' : f'df["BOP{self.suffix}"] =  talib.BOP(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CCI' : f'df["CCI{self.suffix}"] =  talib.CCI(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod={self.timeperiod})',
        'CMO' : f'df["CMO{self.suffix}"] =  talib.CMO(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'DX' : f'df["DX{self.suffix}"] =  talib.DX(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod={self.timeperiod})',
        'MACD' : f'df["MACD{self.suffix}"], df["MACDSIGNAL{self.suffix}"], df["MACDHIST{self.suffix}"] = talib.MACD(df["{self.CandlePricePoint}"], fastperiod={self.fastperiod}, slowperiod={self.slowperiod}, signalperiod={self.signalperiod})',
        'MACDEXT' : f'df["MACD{self.suffix}"], df["MACDSIGNAL{self.suffix}"], df["MACDHIST{self.suffix}"] = talib.MACDEXT(df["{self.CandlePricePoint}"], fastperiod={self.fastperiod}, fastmatype=0, slowperiod={self.slowperiod}, slowmatype={self.slowmatype}, signalperiod={self.signalperiod}, signalmatype={self.signalmatype})',
        'MACDFIX' : f'df["MACD{self.suffix}"], df["MACDSIGNAL{self.suffix}"], df["MACDHIST{self.suffix}"] = talib.MACDFIX(df["{self.CandlePricePoint}"], signalperiod={self.signalperiod})',
        'MFI' : f'df["MFI{self.suffix}"] =  talib.MFI(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], {self.volume}, timeperiod={self.timeperiod})',
        'MINUS_DI' : f'df["MINUS_DI{self.suffix}"] =  talib.MINUS_DI(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod={self.timeperiod})',
        'MINUS_DM' : f'df["MINUS_DM{self.suffix}"] =  talib.MINUS_DM(df["{self.CandleHigh}"], df["{self.CandleLow}"], timeperiod={self.timeperiod})',
        'MOM' : f'df["MOM{self.suffix}"] =  talib.MOM(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'PLUS_DI' : f'df["PLUS_DI{self.suffix}"] =  talib.PLUS_DI(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod={self.timeperiod})',
        'PLUS_DM' : f'df["PLUS_DM{self.suffix}"] =  talib.PLUS_DM(df["{self.CandleHigh}"], df["{self.CandleLow}"], timeperiod={self.timeperiod})',
        'PPO' : f'df["PPO{self.suffix}"] =  talib.PPO(df["{self.CandlePricePoint}"], fastperiod={self.fastperiod}, slowperiod={self.slowperiod}, matype={self.matype})',
        'ROC' : f'df["ROC{self.suffix}"] =  talib.ROC(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'ROCP' : f'df["ROCP{self.suffix}"] =  talib.ROCP(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'ROCR' : f'df["ROCR{self.suffix}"] =  talib.ROCR(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'ROCR100' : f'df["ROCR100{self.suffix}"] =  talib.ROCR100(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'RSI' : f'df["RSI{self.suffix}"] =  talib.RSI(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'STOCH' : f'df["SLOWK{self.suffix}"], df["SLOWD{self.suffix}"] = talib.STOCH(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], fastk_period={self.fastk_period}, slowk_period={self.slowk_period}, slowk_matype={self.slowk_matype}, slowd_period={self.slowd_period}, slowd_matype={self.slowd_matype})',
        'STOCHF' : f'df["FASTK{self.suffix}"], df["FASTD{self.suffix}"] = talib.STOCHF(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], fastk_period={self.fastk_period}, fastd_period={self.fastd_period}, fastd_matype={self.fastd_matype})',
        'STOCHRSI' : f'df["FASTK{self.suffix}"], df["FASTD{self.suffix}"] = talib.STOCHRSI(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod}, fastk_period={self.fastk_period}, fastd_period={self.fastd_period}, fastd_matype={self.fastd_matype})',
        'TRIX' : f'df["TRIX{self.suffix}"] =  talib.TRIX(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'ULTOSC' : f'df["ULTOSC{self.suffix}"] =  talib.ULTOSC(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod1={self.timeperiod1}, timeperiod2={self.timeperiod2}, timeperiod3={self.timeperiod3})',
        'WILLR' : f'df["WILLR{self.suffix}"] =  talib.WILLR(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod={self.timeperiod})',
        'AD' : f'df["AD{self.suffix}"] =  talib.AD(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], {self.volume})',
        'ADOSC' : f'df["ADOSC{self.suffix}"] =  talib.ADOSC(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], {self.volume}, fastperiod={self.fastperiod}, slowperiod={self.slowperiod})',
        'OBV' : f'df["OBV{self.suffix}"] =  talib.OBV(df["{self.CandlePricePoint}"], {self.volume})',
        'ATR' : f'df["ATR{self.suffix}"] =  talib.ATR(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod={self.timeperiod})',
        'NATR' : f'df["NATR{self.suffix}"] =  talib.NATR(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], timeperiod={self.timeperiod})',
        'TRANGE' : f'df["TRANGE{self.suffix}"] =  talib.TRANGE(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'AVGPRICE' : f'df["AVGPRICE{self.suffix}"] =  talib.AVGPRICE(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'MEDPRICE' : f'df["MEDPRICE{self.suffix}"] =  talib.MEDPRICE(df["{self.CandleHigh}"], df["{self.CandleLow}"])',
        'TYPPRICE' : f'df["TYPPRICE{self.suffix}"] =  talib.TYPPRICE(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'WCLPRICE' : f'df["WCLPRICE{self.suffix}"] =  talib.WCLPRICE(df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'HT_DCPERIOD' : f'df["HT_DCPERIOD{self.suffix}"] =  talib.HT_DCPERIOD(df["{self.CandlePricePoint}"])',
        'HT_DCPHASE' : f'df["HT_DCPHASE{self.suffix}"] =  talib.HT_DCPHASE(df["{self.CandlePricePoint}"])',
        'HT_PHASOR' : f'df["INPHASE{self.suffix}"], df["QUADRATURE{self.suffix}"] = talib.HT_PHASOR(df["{self.CandlePricePoint}"])',
        'HT_SINE' : f'df["SINE{self.suffix}"], df["LEADSINE{self.suffix}"] = talib.HT_SINE(df["{self.CandlePricePoint}"])',
        'HT_TRENDMODE' : f'df["HT_TRENDMODE{self.suffix}"] =  talib.HT_TRENDMODE(df["{self.CandlePricePoint}"])',
        'CDL2CROWS' : f'df["CDL2CROWS{self.suffix}"] =  talib.CDL2CROWS(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDL3BLACKCROWS' : f'df["CDL3BLACKCROWS{self.suffix}"] =  talib.CDL3BLACKCROWS(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDL3INSIDE' : f'df["CDL3INSIDE{self.suffix}"] =  talib.CDL3INSIDE(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDL3LINESTRIKE' : f'df["CDL3LINESTRIKE{self.suffix}"] =  talib.CDL3LINESTRIKE(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDL3OUTSIDE' : f'df["CDL3OUTSIDE{self.suffix}"] =  talib.CDL3OUTSIDE(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDL3STARSINSOUTH' : f'df["CDL3STARSINSOUTH{self.suffix}"] =  talib.CDL3STARSINSOUTH(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDL3WHITESOLDIERS' : f'df["CDL3WHITESOLDIERS{self.suffix}"] =  talib.CDL3WHITESOLDIERS(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLABANDONEDBABY' : f'df["CDLABANDONEDBABY{self.suffix}"] =  talib.CDLABANDONEDBABY(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], penetration={self.penetration})',
        'CDLADVANCEBLOCK' : f'df["CDLADVANCEBLOCK{self.suffix}"] =  talib.CDLADVANCEBLOCK(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLBELTHOLD' : f'df["CDLBELTHOLD{self.suffix}"] =  talib.CDLBELTHOLD(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLBREAKAWAY' : f'df["CDLBREAKAWAY{self.suffix}"] =  talib.CDLBREAKAWAY(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLCLOSINGMARUBOZU' : f'df["CDLCLOSINGMARUBOZU{self.suffix}"] =  talib.CDLCLOSINGMARUBOZU(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLCONCEALBABYSWALL' : f'df["CDLCONCEALBABYSWALL{self.suffix}"] =  talib.CDLCONCEALBABYSWALL(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLCOUNTERATTACK' : f'df["CDLCOUNTERATTACK{self.suffix}"] =  talib.CDLCOUNTERATTACK(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLDARKCLOUDCOVER' : f'df["CDLDARKCLOUDCOVER{self.suffix}"] =  talib.CDLDARKCLOUDCOVER(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], penetration={self.penetration})',
        'CDLDOJI' : f'df["CDLDOJI{self.suffix}"] =  talib.CDLDOJI(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLDOJISTAR' : f'df["CDLDOJISTAR{self.suffix}"] =  talib.CDLDOJISTAR(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLDRAGONFLYDOJI' : f'df["CDLDRAGONFLYDOJI{self.suffix}"] =  talib.CDLDRAGONFLYDOJI(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLENGULFING' : f'df["CDLENGULFING{self.suffix}"] =  talib.CDLENGULFING(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLEVENINGDOJISTAR' : f'df["CDLEVENINGDOJISTAR{self.suffix}"] =  talib.CDLEVENINGDOJISTAR(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], penetration={self.penetration})',
        'CDLEVENINGSTAR' : f'df["CDLEVENINGSTAR{self.suffix}"] =  talib.CDLEVENINGSTAR(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], penetration={self.penetration})',
        'CDLGAPSIDESIDEWHITE' : f'df["CDLGAPSIDESIDEWHITE{self.suffix}"] =  talib.CDLGAPSIDESIDEWHITE(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLGRAVESTONEDOJI' : f'df["CDLGRAVESTONEDOJI{self.suffix}"] =  talib.CDLGRAVESTONEDOJI(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLHAMMER' : f'df["CDLHAMMER{self.suffix}"] =  talib.CDLHAMMER(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLHANGINGMAN' : f'df["CDLHANGINGMAN{self.suffix}"] =  talib.CDLHANGINGMAN(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLHARAMI' : f'df["CDLHARAMI{self.suffix}"] =  talib.CDLHARAMI(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLHARAMICROSS' : f'df["CDLHARAMICROSS{self.suffix}"] =  talib.CDLHARAMICROSS(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLHIGHWAVE' : f'df["CDLHIGHWAVE{self.suffix}"] =  talib.CDLHIGHWAVE(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLHIKKAKE' : f'df["CDLHIKKAKE{self.suffix}"] =  talib.CDLHIKKAKE(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLHIKKAKEMOD' : f'df["CDLHIKKAKEMOD{self.suffix}"] =  talib.CDLHIKKAKEMOD(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLHOMINGPIGEON' : f'df["CDLHOMINGPIGEON{self.suffix}"] =  talib.CDLHOMINGPIGEON(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLIDENTICAL3CROWS' : f'df["CDLIDENTICAL3CROWS{self.suffix}"] =  talib.CDLIDENTICAL3CROWS(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLINNECK' : f'df["CDLINNECK{self.suffix}"] =  talib.CDLINNECK(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLINVERTEDHAMMER' : f'df["CDLINVERTEDHAMMER{self.suffix}"] =  talib.CDLINVERTEDHAMMER(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLKICKING' : f'df["CDLKICKING{self.suffix}"] =  talib.CDLKICKING(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLKICKINGBYLENGTH' : f'df["CDLKICKINGBYLENGTH{self.suffix}"] =  talib.CDLKICKINGBYLENGTH(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLLADDERBOTTOM' : f'df["CDLLADDERBOTTOM{self.suffix}"] =  talib.CDLLADDERBOTTOM(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLLONGLEGGEDDOJI' : f'df["CDLLONGLEGGEDDOJI{self.suffix}"] =  talib.CDLLONGLEGGEDDOJI(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLLONGLINE' : f'df["CDLLONGLINE{self.suffix}"] =  talib.CDLLONGLINE(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLMARUBOZU' : f'df["CDLMARUBOZU{self.suffix}"] =  talib.CDLMARUBOZU(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLMATCHINGLOW' : f'df["CDLMATCHINGLOW{self.suffix}"] =  talib.CDLMATCHINGLOW(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLMATHOLD' : f'df["CDLMATHOLD{self.suffix}"] =  talib.CDLMATHOLD(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], penetration={self.penetration})',
        'CDLMORNINGDOJISTAR' : f'df["CDLMORNINGDOJISTAR{self.suffix}"] =  talib.CDLMORNINGDOJISTAR(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], penetration={self.penetration})',
        'CDLMORNINGSTAR' : f'df["CDLMORNINGSTAR{self.suffix}"] =  talib.CDLMORNINGSTAR(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"], penetration={self.penetration})',
        'CDLONNECK' : f'df["CDLONNECK{self.suffix}"] =  talib.CDLONNECK(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLPIERCING' : f'df["CDLPIERCING{self.suffix}"] =  talib.CDLPIERCING(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLRICKSHAWMAN' : f'df["CDLRICKSHAWMAN{self.suffix}"] =  talib.CDLRICKSHAWMAN(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLRISEFALL3METHODS' : f'df["CDLRISEFALL3METHODS{self.suffix}"] =  talib.CDLRISEFALL3METHODS(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLSEPARATINGLINES' : f'df["CDLSEPARATINGLINES{self.suffix}"] =  talib.CDLSEPARATINGLINES(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLSHOOTINGSTAR' : f'df["CDLSHOOTINGSTAR{self.suffix}"] =  talib.CDLSHOOTINGSTAR(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLSHORTLINE' : f'df["CDLSHORTLINE{self.suffix}"] =  talib.CDLSHORTLINE(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLSPINNINGTOP' : f'df["CDLSPINNINGTOP{self.suffix}"] =  talib.CDLSPINNINGTOP(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLSTALLEDPATTERN' : f'df["CDLSTALLEDPATTERN{self.suffix}"] =  talib.CDLSTALLEDPATTERN(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLSTICKSANDWICH' : f'df["CDLSTICKSANDWICH{self.suffix}"] =  talib.CDLSTICKSANDWICH(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLTAKURI' : f'df["CDLTAKURI{self.suffix}"] =  talib.CDLTAKURI(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLTASUKIGAP' : f'df["CDLTASUKIGAP{self.suffix}"] =  talib.CDLTASUKIGAP(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLTHRUSTING' : f'df["CDLTHRUSTING{self.suffix}"] =  talib.CDLTHRUSTING(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLTRISTAR' : f'df["CDLTRISTAR{self.suffix}"] =  talib.CDLTRISTAR(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLUNIQUE3RIVER' : f'df["CDLUNIQUE3RIVER{self.suffix}"] =  talib.CDLUNIQUE3RIVER(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLUPSIDEGAP2CROWS' : f'df["CDLUPSIDEGAP2CROWS{self.suffix}"] =  talib.CDLUPSIDEGAP2CROWS(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'CDLXSIDEGAP3METHODS' : f'df["CDLXSIDEGAP3METHODS{self.suffix}"] =  talib.CDLXSIDEGAP3METHODS(df["{self.CandleOpen}"], df["{self.CandleHigh}"], df["{self.CandleLow}"], df["{self.CandleClose}"])',
        'BETA' : f'df["BETA{self.suffix}"] =  talib.BETA(df["{self.CandleHigh}"], df["{self.CandleLow}"], timeperiod={self.timeperiod})',
        'CORREL' : f'df["CORREL{self.suffix}"] =  talib.CORREL(df["{self.CandleHigh}"], df["{self.CandleLow}"], timeperiod={self.timeperiod})',
        'LINEARREG' : f'df["LINEARREG{self.suffix}"] =  talib.LINEARREG(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'LINEARREG_ANGLE' : f'df["LINEARREG_ANGLE{self.suffix}"] =  talib.LINEARREG_ANGLE(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'LINEARREG_INTERCEPT' : f'df["LINEARREG_INTERCEPT{self.suffix}"] =  talib.LINEARREG_INTERCEPT(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'LINEARREG_SLOPE' : f'df["LINEARREG_SLOPE{self.suffix}"] =  talib.LINEARREG_SLOPE(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'STDDEV' : f'df["STDDEV{self.suffix}"] =  talib.STDDEV(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod}, nbdev={self.nbdev})',
        'TSF' : f'df["TSF{self.suffix}"] =  talib.TSF(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'VAR' : f'df["VAR{self.suffix}"] =  talib.VAR(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod}, nbdev={self.nbdev})',
        'ACOS' : f'df["ACOS{self.suffix}"] =  talib.ACOS(df["{self.CandlePricePoint}"])',
        'ASIN' : f'df["ASIN{self.suffix}"] =  talib.ASIN(df["{self.CandlePricePoint}"])',
        'ATAN' : f'df["ATAN{self.suffix}"] =  talib.ATAN(df["{self.CandlePricePoint}"])',
        'CEIL' : f'df["CEIL{self.suffix}"] =  talib.CEIL(df["{self.CandlePricePoint}"])',
        'COS' : f'df["COS{self.suffix}"] =  talib.COS(df["{self.CandlePricePoint}"])',
        'COSH' : f'df["COSH{self.suffix}"] =  talib.COSH(df["{self.CandlePricePoint}"])',
        'EXP' : f'df["EXP{self.suffix}"] =  talib.EXP(df["{self.CandlePricePoint}"])',
        'FLOOR' : f'df["FLOOR{self.suffix}"] =  talib.FLOOR(df["{self.CandlePricePoint}"])',
        'LN' : f'df["LN{self.suffix}"] =  talib.LN(df["{self.CandlePricePoint}"])',
        'LOG10' : f'df["LOG10{self.suffix}"] =  talib.LOG10(df["{self.CandlePricePoint}"])',
        'SIN' : f'df["SIN{self.suffix}"] =  talib.SIN(df["{self.CandlePricePoint}"])',
        'SINH' : f'df["SINH{self.suffix}"] =  talib.SINH(df["{self.CandlePricePoint}"])',
        'SQRT' : f'df["SQRT{self.suffix}"] =  talib.SQRT(df["{self.CandlePricePoint}"])',
        'TAN' : f'df["TAN{self.suffix}"] =  talib.TAN(df["{self.CandlePricePoint}"])',
        'TANH' : f'df["TANH{self.suffix}"] =  talib.TANH(df["{self.CandlePricePoint}"])',
        'ADD' : f'df["ADD{self.suffix}"] =  talib.ADD(df["{self.CandleHigh}"], df["{self.CandleLow}"])',
        'DIV' : f'df["DIV{self.suffix}"] =  talib.DIV(df["{self.CandleHigh}"], df["{self.CandleLow}"])',
        'MAX' : f'df["MAX{self.suffix}"] =  talib.MAX(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'MAXINDEX' : f'df["MAXINDEX{self.suffix}"] =  talib.MAXINDEX(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'MIN' : f'df["MIN{self.suffix}"] =  talib.MIN(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'MININDEX' : f'df["MININDEX{self.suffix}"] =  talib.MININDEX(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'MINMAX' : f'df["MIN{self.suffix}"], df["MAX{self.suffix}"] = talib.MINMAX(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'MINMAXINDEX' : f'df["MINIDX{self.suffix}"], df["MAXIDX{self.suffix}"] = talib.MINMAXINDEX(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})',
        'MULT' : f'df["MULT{self.suffix}"] =  talib.MULT(df["{self.CandleHigh}"], df["{self.CandleLow}"])',
        'SUB' : f'df["SUB{self.suffix}"] =  talib.SUB(df["{self.CandleHigh}"], df["{self.CandleLow}"])',
        'SUM' : f'df["SUM{self.suffix}"] =  talib.SUM(df["{self.CandlePricePoint}"], timeperiod={self.timeperiod})'


        }



indicator_properties = {
    'BBANDS': {'function' : '', 'CandleNumber':'0', 'returns' : 'upperband, middleband, lowerband' , 'IndicatorName': 'BBANDS', 'description': 'Bollinger Bands', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 5, 'nbdevup': 2, 'nbdevdn': 2, 'matype': 0}},
    'DEMA': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'DEMA', 'description': 'Double Exponential Moving Average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'EMA': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'EMA', 'description': 'Exponential Moving Average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'HT_TRENDLINE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'HT_TRENDLINE', 'description': 'Hilbert Transform - Instantaneous Trendline', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'KAMA': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'KAMA', 'description': 'Kaufman Adaptive Moving Average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'MA': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MA', 'description': 'Moving average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30, 'matype': 0}}, 
    'MAMA': {'function' : '', 'CandleNumber':'0', 'returns' : 'mama, fama' , 'IndicatorName': 'MAMA', 'description': 'MESA Adaptive Moving Average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'fastlimit': 0, 'slowlimit': 0}}, 
    'MAVP': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MAVP', 'description': 'Moving average with variable period', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'periods': '', 'minperiod': 2, 'maxperiod': 30, 'matype': 0}}, 
    'MIDPOINT': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MIDPOINT', 'description': 'MidPoint over period', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 14}}, 
    'MIDPRICE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MIDPRICE', 'description': 'Midpoint Price over period', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'timeperiod': 14}}, 
    'SAR': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'SAR', 'description': 'Parabolic SAR', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'acceleration': 0, 'maximum': 0}}, 
    'SAREXT': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'SAREXT', 'description': 'Parabolic SAR - Extended', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'startvalue': 0, 'offsetonreverse': 0, 'accelerationinitlong': 0, 'accelerationlong': 0, 'accelerationmaxlong': 0, 'accelerationinitshort': 0, 'accelerationshort': 0, 'accelerationmaxshort': 0}}, 
    'SMA': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'SMA', 'description': 'Simple Moving Average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'T3': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'T3', 'description': 'Triple Exponential Moving Average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 5, 'vfactor': 0}}, 
    'TEMA': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'TEMA', 'description': 'Triple Exponential Moving Average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'TRIMA': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'TRIMA', 'description': 'Triangular Moving Average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'WMA': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'WMA', 'description': 'Weighted Moving Average', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'ADX': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ADX', 'description': 'Average Directional Movement Index', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod': 14}}, 
    'ADXR': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ADXR', 'description': 'Average Directional Movement Index Rating', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod': 14}}, 
    'APO': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'APO', 'description': 'Absolute Price Oscillator', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'fastperiod': 12, 'slowperiod': 26, 'matype': 0}}, 
    'AROON': {'function' : '', 'CandleNumber':'0', 'returns' : 'aroondown, aroonup' , 'IndicatorName': 'AROON', 'description': 'Aroon', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'timeperiod': 14}}, 
    'AROONOSC': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'AROONOSC', 'description': 'Aroon Oscillator', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'timeperiod': 14}}, 
    'BOP': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'BOP', 'description': 'Balance Of Power', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CCI': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'CCI', 'description': 'Commodity Channel Index', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod': 14}}, 
    'CMO': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'CMO', 'description': 'Chande Momentum Oscillator', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 14}}, 
    'DX': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'DX', 'description': 'Directional Movement Index', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod': 14}}, 
    'MACD': {'function' : '', 'CandleNumber':'0', 'returns' : 'macd, macdsignal, macdhist' , 'IndicatorName': 'MACD', 'description': 'Moving Average Convergence/Divergence', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'fastperiod': 12, 'slowperiod': 26, 'signalperiod': 9}}, 
    'MACDEXT': {'function' : '', 'CandleNumber':'0', 'returns' : 'macd, macdsignal, macdhist' , 'IndicatorName': 'MACDEXT', 'description': 'MACD with controllable MA type', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'fastperiod': 12, 'fastmatype': 0, 'slowperiod': 26, 'slowmatype': 0, 'signalperiod': 9, 'signalmatype': 0}}, 
    'MACDFIX': {'function' : '', 'CandleNumber':'0', 'returns' : 'macd, macdsignal, macdhist' , 'IndicatorName': 'MACDFIX', 'description': 'Moving Average Convergence/Divergence Fix 12/26', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'signalperiod': 9}}, 
    'MFI': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MFI', 'description': 'Money Flow Index', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'volume': '', 'timeperiod': 14}}, 
    'MINUS_DI': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MINUS_DI', 'description': 'Minus Directional Indicator', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod': 14}}, 
    'MINUS_DM': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MINUS_DM', 'description': 'Minus Directional Movement', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'timeperiod': 14}}, 
    'MOM': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MOM', 'description': 'Momentum', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 10}}, 
    'PLUS_DI': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'PLUS_DI', 'description': 'Plus Directional Indicator', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod': 14}}, 
    'PLUS_DM': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'PLUS_DM', 'description': 'Plus Directional Movement', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'timeperiod': 14}}, 
    'PPO': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'PPO', 'description': 'Percentage Price Oscillator', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'fastperiod': 12, 'slowperiod': 26, 'matype': 0}}, 
    'ROC': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ROC', 'description': 'Rate of change : ((price/prevPrice)-1)*100', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 10}}, 
    'ROCP': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ROCP', 'description': 'Rate of change Percentage: (price-prevPrice)/prevPrice', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 10}}, 
    'ROCR': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ROCR', 'description': 'Rate of change ratio: (price/prevPrice)', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 10}}, 
    'ROCR100': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ROCR100', 'description': 'Rate of change ratio 100 scale: (price/prevPrice)*100', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 10}}, 
    'RSI': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'RSI', 'description': 'Relative Strength Index', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 14}}, 
    'STOCH': {'function' : '', 'CandleNumber':'0', 'returns' : 'slowk, slowd' , 'IndicatorName': 'STOCH', 'description': 'Stochastic', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'fastk_period': 5, 'slowk_period': 3, 'slowk_matype': 0, 'slowd_period': 3, 'slowd_matype': 0}}, 
    'STOCHF': {'function' : '', 'CandleNumber':'0', 'returns' : 'fastk, fastd' , 'IndicatorName': 'STOCHF', 'description': 'Stochastic Fast', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'fastk_period': 5, 'fastd_period': 3, 'fastd_matype': 0}}, 
    'STOCHRSI': {'function' : '', 'CandleNumber':'0', 'returns' : 'fastk, fastd' , 'IndicatorName': 'STOCHRSI', 'description': 'Stochastic Relative Strength Index', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 14, 'fastk_period': 5, 'fastd_period': 3, 'fastd_matype': 0}}, 
    'TRIX': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'TRIX', 'description': '1-day Rate-Of-Change (ROC) of a Triple Smooth EMA', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'ULTOSC': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ULTOSC', 'description': 'Ultimate Oscillator', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod1': 7, 'timeperiod2': 14, 'timeperiod3': 28}}, 
    'WILLR': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'WILLR', 'description': "Williams' %R", 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod': 14}}, 
    'AD': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'AD', 'description': 'Chaikin A/D Line', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'volume': ''}}, 
    'ADOSC': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ADOSC', 'description': 'Chaikin A/D Oscillator', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'volume': '', 'fastperiod': 3, 'slowperiod': 10}}, 
    'OBV': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'OBV', 'description': 'On Balance Volume', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'volume': ''}},

    'ATR': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ATR', 'description': 'Average True Range', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod': 14}}, 
    'NATR': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'NATR', 'description': 'Normalized Average True Range', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'timeperiod': 14}}, 
    'TRANGE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'TRANGE', 'description': 'True Range', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'AVGPRICE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'AVGPRICE', 'description': 'Average Price', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'MEDPRICE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MEDPRICE', 'description': 'Median Price', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low'}}, 
    'TYPPRICE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'TYPPRICE', 'description': 'Typical Price', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'WCLPRICE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'WCLPRICE', 'description': 'Weighted Close Price', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'HT_DCPERIOD': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'HT_DCPERIOD', 'description': 'Hilbert Transform - Dominant Cycle Period', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'HT_DCPHASE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'HT_DCPHASE', 'description': 'Hilbert Transform - Dominant Cycle Phase', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'HT_PHASOR': {'function' : '', 'CandleNumber':'0', 'returns' : 'inphase, quadrature' , 'IndicatorName': 'HT_PHASOR', 'description': 'Hilbert Transform - Phasor Components', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'HT_SINE': {'function' : '', 'CandleNumber':'0', 'returns' : 'sine, leadsine' , 'IndicatorName': 'HT_SINE', 'description': 'Hilbert Transform - SineWave', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'HT_TRENDMODE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'HT_TRENDMODE', 'description': 'Hilbert Transform - Trend vs Cycle Mode', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'CDL2CROWS': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDL2CROWS', 'description': 'Two Crows', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDL3BLACKCROWS': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDL3BLACKCROWS', 'description': 'Three Black Crows', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDL3INSIDE': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDL3INSIDE', 'description': 'Three Inside Up/Down', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDL3LINESTRIKE': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDL3LINESTRIKE', 'description': 'Three-Line Strike', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDL3OUTSIDE': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDL3OUTSIDE', 'description': 'Three Outside Up/Down', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDL3STARSINSOUTH': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDL3STARSINSOUTH', 'description': 'Three Stars In The South', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDL3WHITESOLDIERS': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDL3WHITESOLDIERS', 'description': 'Three Advancing White Soldiers', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLABANDONEDBABY': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLABANDONEDBABY', 'description': 'Abandoned Baby', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'penetration': 0}}, 
    'CDLADVANCEBLOCK': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLADVANCEBLOCK', 'description': 'Advance Block', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLBELTHOLD': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLBELTHOLD', 'description': 'Belt-hold', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLBREAKAWAY': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLBREAKAWAY', 'description': 'Breakaway', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLCLOSINGMARUBOZU': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLCLOSINGMARUBOZU', 'description': 'Closing Marubozu', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLCONCEALBABYSWALL': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLCONCEALBABYSWALL', 'description': 'Concealing Baby Swallow', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLCOUNTERATTACK': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLCOUNTERATTACK', 'description': 'Counterattack', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLDARKCLOUDCOVER': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLDARKCLOUDCOVER', 'description': 'Dark Cloud Cover', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'penetration': 0}}, 
    'CDLDOJI': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLDOJI', 'description': 'Doji', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLDOJISTAR': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLDOJISTAR', 'description': 'Doji Star', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLDRAGONFLYDOJI': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLDRAGONFLYDOJI', 'description': 'Dragonfly Doji', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLENGULFING': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLENGULFING', 'description': 'Engulfing Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLEVENINGDOJISTAR': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLEVENINGDOJISTAR', 'description': 'Evening Doji Star', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'penetration': 0}}, 
    'CDLEVENINGSTAR': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLEVENINGSTAR', 'description': 'Evening Star', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'penetration': 0}}, 
    'CDLGAPSIDESIDEWHITE': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLGAPSIDESIDEWHITE', 'description': 'Up/Down-gap side-by-side white lines', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLGRAVESTONEDOJI': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLGRAVESTONEDOJI', 'description': 'Gravestone Doji', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLHAMMER': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLHAMMER', 'description': 'Hammer', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLHANGINGMAN': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLHANGINGMAN', 'description': 'Hanging Man', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLHARAMI': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLHARAMI', 'description': 'Harami Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLHARAMICROSS': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLHARAMICROSS', 'description': 'Harami Cross Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLHIGHWAVE': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLHIGHWAVE', 'description': 'High-Wave Candle', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLHIKKAKE': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLHIKKAKE', 'description': 'Hikkake Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLHIKKAKEMOD': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLHIKKAKEMOD', 'description': 'Modified Hikkake Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLHOMINGPIGEON': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLHOMINGPIGEON', 'description': 'Homing Pigeon', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLIDENTICAL3CROWS': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLIDENTICAL3CROWS', 'description': 'Identical Three Crows', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLINNECK': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLINNECK', 'description': 'In-Neck Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLINVERTEDHAMMER': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLINVERTEDHAMMER', 'description': 'Inverted Hammer', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLKICKING': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLKICKING', 'description': 'Kicking', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLKICKINGBYLENGTH': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLKICKINGBYLENGTH', 'description': 'Kicking - bull/bear determined by the longer marubozu', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLLADDERBOTTOM': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLLADDERBOTTOM', 'description': 'Ladder Bottom', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLLONGLEGGEDDOJI': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLLONGLEGGEDDOJI', 'description': 'Long Legged Doji', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLLONGLINE': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLLONGLINE', 'description': 'Long Line Candle', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLMARUBOZU': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLMARUBOZU', 'description': 'Marubozu', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLMATCHINGLOW': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLMATCHINGLOW', 'description': 'Matching Low', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLMATHOLD': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLMATHOLD', 'description': 'Mat Hold', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'penetration': 0}}, 
    'CDLMORNINGDOJISTAR': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLMORNINGDOJISTAR', 'description': 'Morning Doji Star', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'penetration': 0}}, 
    'CDLMORNINGSTAR': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLMORNINGSTAR', 'description': 'Morning Star', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close', 'penetration': 0}}, 
    'CDLONNECK': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLONNECK', 'description': 'On-Neck Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLPIERCING': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLPIERCING', 'description': 'Piercing Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLRICKSHAWMAN': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLRICKSHAWMAN', 'description': 'Rickshaw Man', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLRISEFALL3METHODS': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLRISEFALL3METHODS', 'description': 'Rising/Falling Three Methods', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLSEPARATINGLINES': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLSEPARATINGLINES', 'description': 'Separating Lines', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLSHOOTINGSTAR': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLSHOOTINGSTAR', 'description': 'Shooting Star', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLSHORTLINE': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLSHORTLINE', 'description': 'Short Line Candle', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLSPINNINGTOP': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLSPINNINGTOP', 'description': 'Spinning Top', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLSTALLEDPATTERN': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLSTALLEDPATTERN', 'description': 'Stalled Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLSTICKSANDWICH': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLSTICKSANDWICH', 'description': 'Stick Sandwich', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLTAKURI': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLTAKURI', 'description': 'Takuri (Dragonfly Doji with very long lower shadow)', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLTASUKIGAP': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLTASUKIGAP', 'description': 'Tasuki Gap', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLTHRUSTING': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLTHRUSTING', 'description': 'Thrusting Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLTRISTAR': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLTRISTAR', 'description': 'Tristar Pattern', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLUNIQUE3RIVER': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLUNIQUE3RIVER', 'description': 'Unique 3 River', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLUPSIDEGAP2CROWS': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLUPSIDEGAP2CROWS', 'description': 'Upside Gap Two Crows', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    'CDLXSIDEGAP3METHODS': {'function' : '', 'CandleNumber':'0', 'returns' : 'integer' , 'IndicatorName': 'CDLXSIDEGAP3METHODS', 'description': 'Upside/Downside Gap Three Methods', 'params': {'suffix': '', 'CandleOpen': 'Open', 'CandleHigh': 'high', 'CandleLow': 'low', 'self.CandleClose': 'close'}}, 
    
    'BETA': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'BETA', 'description': 'Beta', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'timeperiod': 5}}, 
    'CORREL': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'CORREL', 'description': "Pearson's Correlation Coefficient (r)", 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low', 'timeperiod': 30}}, 
    'LINEARREG': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'LINEARREG', 'description': 'Linear Regression', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 14}}, 
    'LINEARREG_ANGLE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'LINEARREG_ANGLE', 'description': 'Linear Regression Angle', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 14}}, 
    'LINEARREG_INTERCEPT': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'LINEARREG_INTERCEPT', 'description': 'Linear Regression Intercept', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 14}}, 
    'LINEARREG_SLOPE': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'LINEARREG_SLOPE', 'description': 'Linear Regression Slope', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 14}}, 
    'STDDEV': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'STDDEV', 'description': 'Standard Deviation', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 5, 'nbdev': 1}}, 
    'TSF': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'TSF', 'description': 'Time Series Forecast', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 14}}, 
    'VAR': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'VAR', 'description': 'Variance', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 5, 'nbdev': 1}}, 
    'ACOS': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ACOS', 'description': 'Vector Trigonometric ACos', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'ASIN': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ASIN', 'description': 'Vector Trigonometric ASin', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'ATAN': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ATAN', 'description': 'Vector Trigonometric ATan', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'CEIL': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'CEIL', 'description': 'Vector Ceil', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'COS': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'COS', 'description': 'Vector Trigonometric Cos', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'COSH': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'COSH', 'description': 'Vector Trigonometric Cosh', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'EXP': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'EXP', 'description': 'Vector Arithmetic Exp', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'FLOOR': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'FLOOR', 'description': 'Vector Floor', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'LN': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'LN', 'description': 'Vector Log Natural', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'LOG10': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'LOG10', 'description': 'Vector Log10', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'SIN': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'SIN', 'description': 'Vector Trigonometric Sin', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'SINH': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'SINH', 'description': 'Vector Trigonometric Sinh', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'SQRT': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'SQRT', 'description': 'Vector Square Root', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'TAN': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'TAN', 'description': 'Vector Trigonometric Tan', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'TANH': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'TANH', 'description': 'Vector Trigonometric Tanh', 'params': {'suffix': '', 'CandlePricePoint': 'close'}}, 
    'ADD': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'ADD', 'description': 'Vector Arithmetic Add', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low'}}, 
    'DIV': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'DIV', 'description': 'Vector Arithmetic Div', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low'}}, 
    'MAX': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MAX', 'description': 'Highest value over a specified period', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'MAXINDEX': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MAXINDEX', 'description': 'Index of highest value over a specified period', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'MIN': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MIN', 'description': 'Lowest value over a specified period', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'MININDEX': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MININDEX', 'description': 'Index of lowest value over a specified period', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'MINMAX': {'function' : '', 'CandleNumber':'0', 'returns' : 'min, max' , 'IndicatorName': 'MINMAX', 'description': 'Lowest and highest values over a specified period', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'MINMAXINDEX': {'function' : '', 'CandleNumber':'0', 'returns' : 'minidx, maxidx' , 'IndicatorName': 'MINMAXINDEX', 'description': 'Indexes of lowest and highest values over a specified period', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}, 
    'MULT': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'MULT', 'description': 'Vector Arithmetic Mult', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low'}}, 
    'SUB': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'SUB', 'description': 'Vector Arithmetic Substraction', 'params': {'suffix': '', 'CandleHigh': 'high', 'CandleLow': 'low'}}, 
    'SUM': {'function' : '', 'CandleNumber':'0', 'returns' : 'real' , 'IndicatorName': 'SUM', 'description': 'Summation', 'params': {'suffix': '', 'CandlePricePoint': 'close', 'timeperiod': 30}}
    }


if __name__ == "__main__":
    for ind in indicator_properties:
        # print(ind)
        # print(indicator_properties[ind]['IndicatorName'])
        indicator_properties[ind]['IndicatorName'] = ind

    f = open("indicator2.py", "w")
    f.write(f"indicator_properties = {indicator_properties}")
    f.close()